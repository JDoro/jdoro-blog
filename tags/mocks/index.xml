<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mocks on JDORO.println</title><link>https://jdoro.github.io/jdoro-blog/tags/mocks/</link><description>Recent content in Mocks on JDORO.println</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 25 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://jdoro.github.io/jdoro-blog/tags/mocks/index.xml" rel="self" type="application/rss+xml"/><item><title>Jest Mock Factories</title><link>https://jdoro.github.io/jdoro-blog/posts/2024-04-25-jest-mock-factories/</link><pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate><guid>https://jdoro.github.io/jdoro-blog/posts/2024-04-25-jest-mock-factories/</guid><description>&lt;p&gt;One of the best features of the testing framework Jest is its built-in support
for mocking imports. There is a full suite of helper functions and utilities that
make it very easy to completely mock an imported file with very little effort.&lt;/p&gt;
&lt;p&gt;Jest accomplishes this by rebuilding an entire registry of every module in the
dependency tree of everything you import into the test file. This happens once
per test suite/file. This can be pretty expensive and slow if you have a lot of
test suites or files with a lot of imports.&lt;/p&gt;</description></item></channel></rss>